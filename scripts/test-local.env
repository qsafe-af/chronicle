# Chronicle Test Configuration for Local Development
# Source this file before running chronicled for testing
# Usage: source scripts/test-local.env && cargo run --release

# Database Configuration
export PG_DSN="postgresql:///chronicle"

# Alternative with chronicle user (if you want to use a different user)
# export PG_DSN="postgresql:///chronicle"

# Blockchain Node Configuration
# Default to local node, change to your quantum-safe chain endpoint
export WS_URL="ws://localhost:9944"

# Quantum-safe test endpoints (uncomment one to use):
# export WS_URL="wss://a.t.res.fm"              # Resonance - Quantum-safe PoW chain
# export WS_URL="wss://a.i.res.fm"              # Heisenberg - Quantum-safe chain
# Note: Chronicle only indexes quantum-safe chains using NIST signature schemes
# Traditional chains using ECDSA/*25519 will be obsolete post-quantum

# TimescaleDB Configuration
export ENABLE_TIMESCALE=true

# Database Pool Configuration
export DB_MAX_CONNECTIONS=10
export DB_MIN_CONNECTIONS=1
export DB_CONNECTION_TIMEOUT=30
export DB_IDLE_TIMEOUT=600
export DB_MAX_LIFETIME=1800

# Logging Configuration
export RUST_LOG=info
# For debugging, use:
# export RUST_LOG=debug,chronicled=trace,chron_db=debug

# Runtime Discovery Configuration
# Maximum blocks to scan for runtime versions (0 = unlimited)
export MAX_RUNTIME_SCAN_BLOCKS=0

# Quantum-Safe PoW Chain Configuration
export FOLLOW_BEST=true                # Follow best blocks instead of finalized (for quantum-safe PoW chains)
export FINALITY_CONFIRMATIONS=10       # Number of confirmations for finality (quantum-safe PoW chains)

# Test Mode Configuration
export TEST_MODE=false  # Set to true to enable test features

# Performance Tuning
export BLOCK_BATCH_SIZE=100     # Number of blocks to process in batch
export EVENT_BATCH_SIZE=1000    # Number of events to batch insert

# Show current configuration
echo "Chronicle Test Configuration Loaded:"
echo "====================================="
echo "Database: ${PG_DSN}"
echo "Node: ${WS_URL}"
echo "TimescaleDB: ${ENABLE_TIMESCALE}"
echo "Log Level: ${RUST_LOG}"
echo "Quantum-Safe PoW Mode: ${FOLLOW_BEST}"
echo "Confirmations: ${FINALITY_CONFIRMATIONS}"
echo "====================================="
echo ""
echo "To deploy TimescaleDB locally, run:"
echo "  sudo ./scripts/deploy-timescaledb.sh"
echo ""
echo "To run Chronicle:"
echo "  cargo run --release"
echo ""
