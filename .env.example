# Chronicle environment example
# Copy this file to .env and adjust as needed. Keep real secrets out of git.

# -----------------------------------------------------------------------------
# Indexer / runtime config
# -----------------------------------------------------------------------------
# WebSocket endpoint for the quantum-safe blockchain node
WS_URL=wss://a.t.res.fm

# Logging verbosity
RUST_LOG=info

# Performance tuning (optional)
DB_MAX_CONNECTIONS=10
DB_MIN_CONNECTIONS=1
DB_CONNECTION_TIMEOUT=30
DB_IDLE_TIMEOUT=600
DB_MAX_LIFETIME=1800
ENABLE_TIMESCALE=true
FINALITY_CONFIRMATIONS=200

# -----------------------------------------------------------------------------
# Local development (Unix socket) – recommended for host-side tools/CLI
# -----------------------------------------------------------------------------
# Use the currently logged-in UNIX user to connect over the local PostgreSQL socket
# This requires the chronicle database to exist locally and peer auth to be configured.
PG_DSN=postgresql:///chronicle

# -----------------------------------------------------------------------------
# Containerized services (TCP) – used by chronicled/hasura containers
# -----------------------------------------------------------------------------
# Hostname where Postgres is reachable from inside containers.
# For a DB running on the host, many runtimes support the special hostname below.
PG_HOSTNAME=host.containers.internal

# Database name and user for container TCP connections
PG_DATABASE=chronicle
PG_USERNAME=chronicle

# Generate a strong password at shell-evaluation time.
# Note: command substitution works when sourced by a shell; static env loaders may not evaluate it.
PG_PASSWORD=$(pwgen --secure --ambiguous --symbols --remove-chars "\$\"\`\\|'" 24 1)

# -----------------------------------------------------------------------------
# Hasura GraphQL Engine
# -----------------------------------------------------------------------------
# Admin secret used to secure the Hasura console and API
# You can also generate this just like PG_PASSWORD if you wish:
# HASURA_ADMIN_SECRET=$(pwgen --secure --ambiguous --symbols --remove-chars "\$\"\`\\|'" 24 1)
HASURA_ADMIN_SECRET=

# Port where Hasura listens locally
HASURA_PORT=8080

# URL used by helper scripts to talk to Hasura (hasura-track-tables.sh)
HASURA_URL=http://localhost:${HASURA_PORT}

# -----------------------------------------------------------------------------
# Notes
# -----------------------------------------------------------------------------
# - For local CLI usage, prefer the socket-based PG_DSN above (psql -d chronicle).
# - Containerized services should connect over TCP using PG_HOSTNAME/PG_DATABASE/PG_USERNAME/PG_PASSWORD.
# - Do not commit real secrets. This file demonstrates variable names and safe defaults.
